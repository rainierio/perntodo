[{"/Users/rainierio/Project/perntodo/client/src/index.js":"1","/Users/rainierio/Project/perntodo/client/src/App.js":"2","/Users/rainierio/Project/perntodo/client/src/components/inputTodo.js":"3","/Users/rainierio/Project/perntodo/client/src/components/listTodo.js":"4","/Users/rainierio/Project/perntodo/client/src/components/editTodo.js":"5"},{"size":219,"mtime":1643878050086,"results":"6","hashOfConfig":"7"},{"size":323,"mtime":1643880779328,"results":"8","hashOfConfig":"7"},{"size":2008,"mtime":1643896961711,"results":"9","hashOfConfig":"7"},{"size":4557,"mtime":1643898117044,"results":"10","hashOfConfig":"7"},{"size":1996,"mtime":1643941564215,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"mnzmuu",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/rainierio/Project/perntodo/client/src/index.js",[],["26","27"],"/Users/rainierio/Project/perntodo/client/src/App.js",[],"/Users/rainierio/Project/perntodo/client/src/components/inputTodo.js",["28"],"import React, { Fragment, useState } from \"react\";\n\n\nconst InputTodo = () => {\n\n    const [description, setDescription] = useState(\"\");\n\n    const onSubmitFrom = async e => {\n        //e.preventDefault();\n        try {\n            const body = { description }\n            const response = await fetch(\"http://localhost:5000/todos\", {\n                method: \"post\",\n                headers: { \"content-type\": \"application/json\" },\n                body: JSON.stringify(body)\n            })\n            \n        } catch (err) {\n            console.log(err.message)\n        }\n    }\n\n    return (\n        <Fragment>\n            <div>\n                <section className=\"bg-white dark:bg-gray-800\">\n                    <form onSubmit={onSubmitFrom}>\n                        <div className=\"max-w-3xl px-6 py-16 mx-auto text-center\">\n                            <h1 className=\"text-3xl font-semibold text-gray-800 dark:text-gray-100\">Please input your task</h1>\n                            <div className=\"flex flex-col mt-8 space-y-3 sm:space-y-0 sm:flex-row sm:justify-center sm:-mx-2\">\n                                <input id=\"task\" type=\"text\" className=\"px-4 py-2 text-gray-700 bg-white border rounded-md sm:mx-2 dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-40\" placeholder=\"Task\" value={description} onChange={e => setDescription(e.target.value)} />\n\n                                <button className=\"px-4 py-2 text-sm font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-blue-700 rounded-md sm:mx-2 hover:bg-blue-600 focus:outline-none focus:bg-blue-600\">\n                                    Input\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </section>\n            </div>\n        </Fragment>\n\n    )\n\n}\nexport default InputTodo;","/Users/rainierio/Project/perntodo/client/src/components/listTodo.js",["29"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport EditTodo from \"./editTodo\";\n\n\nconst ListTodo = () => {\n    const [todos, setTodos] = useState([])\n\n    const getTodos = async () => {\n        try {\n            const response = await fetch(\"http://localhost:5000/todos\")\n            const jsonData = await response.json()\n            setTodos(jsonData);\n        } catch (err) {\n            console.log(err.message);\n        }\n\n    }\n\n    const deleteTodo = async (id) => {\n        try {\n            const response = await fetch(`http://localhost:5000/todos/${id}`, {\n                method: \"DELETE\"\n            })\n            setTodos(todos.filter(todo => todo.todo_id !== id))\n        } catch (err) {\n            console.log(err.message);\n        }\n    }\n\n    useEffect(() => {\n        getTodos();\n    }, [])\n\n    return (\n        <Fragment>\n            <div className=\"container mx-auto px-4 sm:px-8\">\n                <div className=\"py-8\">\n                    <div>\n                        <h2 className=\"text-2xl font-semibold leading-tight\">Task List</h2>\n                    </div>\n                    <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                        <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\n                            <table className=\"min-w-full leading-normal\">\n                                <thead>\n                                    <tr>\n                                        <th\n                                            className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                                            Description\n                                        </th>\n                                        <th\n                                            className=\"px-2 py-2 border-b-2 border-gray-200 bg-gray-100 text-right pr-10 text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                                            Edit\n                                        </th>\n                                        <th\n                                            className=\"px-2 py-2 border-b-2 border-gray-200 bg-gray-100 text-right pr-10 text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                                            Delete\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        todos.map(todo => (\n                                            <tr key={todo.todo_id}>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-2/5\">\n                                                    <div className=\"ml-3\">\n                                                        <p className=\"text-gray-900 whitespace-no-wrap text-left\">\n                                                            {todo.description}\n                                                        </p>\n                                                    </div>\n                                                </td>\n                                                <td className=\"px-2 py-2 border-b border-gray-200 bg-white text-right text-sm\">\n                                                    <EditTodo />\n                                                </td>\n                                                <td className=\"px-2 py-2 border-b border-gray-200 bg-white text-right text-sm\">\n\n                                                    <button className=\"px-1 py-1 text-xs font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-red-700 rounded-md sm:mx-2 hover:bg-red-600 focus:outline-none focus:bg-blue-600\"\n                                                        onClick={() => deleteTodo(todo.todo_id)}>\n                                                        Delete\n\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment >\n    )\n}\n\nexport default ListTodo;\n\n","/Users/rainierio/Project/perntodo/client/src/components/editTodo.js",["30"],"import React, { Fragment, useState, useCallback } from 'react';\n\nconst EditTodo = () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const handleShowModal = useCallback(() => {\n        setShowModal(!showModal);\n    }, [showModal]);\n\n    const handleCloseModal = useCallback(() => {\n        setShowModal(false);\n    }, []);\n    return (\n        <Fragment>\n            <div>\n                <button onClick={handleShowModal} id=\"buttonmodal\" className=\"px-1 py-1 text-xs font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-lime-700 rounded-md sm:mx-2 hover:bg-lime-600 focus:outline-none focus:bg-blue-600\" type=\"button\">Open modal</button>\n            </div>\n            {showModal &&\n\n                <div id=\"modal\"\n                    className=\"fixed top-0 left-0 w-screen h-screen flex items-center justify-center bg-blue-500 bg-opacity-50 transform scale-0 transition-transform duration-300\">\n                    <div className=\"bg-white w-1/2 h-1/2 p-12\">\n                        <button id=\"closebutton\" type=\"button\" className=\"focus:outline-none\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                                    d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                            </svg>\n                        </button>\n\n                        <p>\n                            Lorem, ipsum dolor sit amet consectetur adipisicing elit.\n                            Minus placeat maiores repudiandae, error perferendis inventore\n                            aspernatur voluptatum omnis sint debitis!\n                        </p>\n                    </div>\n                </div>\n\n            }\n        </Fragment>\n    )\n}\nexport default EditTodo;\n\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":12,"column":19,"nodeType":"37","messageId":"38","endLine":12,"endColumn":27},{"ruleId":"35","severity":1,"message":"36","line":21,"column":19,"nodeType":"37","messageId":"38","endLine":21,"endColumn":27},{"ruleId":"35","severity":1,"message":"39","line":10,"column":11,"nodeType":"37","messageId":"38","endLine":10,"endColumn":27},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'handleCloseModal' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]