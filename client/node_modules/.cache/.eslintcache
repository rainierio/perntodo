[{"/Users/rainierio/Project/perntodo/client/src/index.js":"1","/Users/rainierio/Project/perntodo/client/src/App.js":"2","/Users/rainierio/Project/perntodo/client/src/components/inputTodo.js":"3","/Users/rainierio/Project/perntodo/client/src/components/listTodo.js":"4","/Users/rainierio/Project/perntodo/client/src/components/editTodo.js":"5"},{"size":219,"mtime":1643878050086,"results":"6","hashOfConfig":"7"},{"size":323,"mtime":1643880779328,"results":"8","hashOfConfig":"7"},{"size":2008,"mtime":1643896961711,"results":"9","hashOfConfig":"7"},{"size":4612,"mtime":1643948772606,"results":"10","hashOfConfig":"7"},{"size":2979,"mtime":1643948754682,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"mnzmuu",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/rainierio/Project/perntodo/client/src/index.js",[],["26","27"],"/Users/rainierio/Project/perntodo/client/src/App.js",[],"/Users/rainierio/Project/perntodo/client/src/components/inputTodo.js",["28"],"import React, { Fragment, useState } from \"react\";\n\n\nconst InputTodo = () => {\n\n    const [description, setDescription] = useState(\"\");\n\n    const onSubmitFrom = async e => {\n        //e.preventDefault();\n        try {\n            const body = { description }\n            const response = await fetch(\"http://localhost:5000/todos\", {\n                method: \"post\",\n                headers: { \"content-type\": \"application/json\" },\n                body: JSON.stringify(body)\n            })\n            \n        } catch (err) {\n            console.log(err.message)\n        }\n    }\n\n    return (\n        <Fragment>\n            <div>\n                <section className=\"bg-white dark:bg-gray-800\">\n                    <form onSubmit={onSubmitFrom}>\n                        <div className=\"max-w-3xl px-6 py-16 mx-auto text-center\">\n                            <h1 className=\"text-3xl font-semibold text-gray-800 dark:text-gray-100\">Please input your task</h1>\n                            <div className=\"flex flex-col mt-8 space-y-3 sm:space-y-0 sm:flex-row sm:justify-center sm:-mx-2\">\n                                <input id=\"task\" type=\"text\" className=\"px-4 py-2 text-gray-700 bg-white border rounded-md sm:mx-2 dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-400 dark:focus:border-blue-300 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-40\" placeholder=\"Task\" value={description} onChange={e => setDescription(e.target.value)} />\n\n                                <button className=\"px-4 py-2 text-sm font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-blue-700 rounded-md sm:mx-2 hover:bg-blue-600 focus:outline-none focus:bg-blue-600\">\n                                    Input\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </section>\n            </div>\n        </Fragment>\n\n    )\n\n}\nexport default InputTodo;","/Users/rainierio/Project/perntodo/client/src/components/listTodo.js",["29"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport EditTodo from \"./editTodo\";\n\n\nconst ListTodo = () => {\n    const [todos, setTodos] = useState([])\n\n    const getTodos = async () => {\n        try {\n            const response = await fetch(\"http://localhost:5000/todos\")\n            const jsonData = await response.json()\n            setTodos(jsonData);\n        } catch (err) {\n            console.log(err.message);\n        }\n\n    }\n\n    const deleteTodo = async (id) => {\n        try {\n            const response = await fetch(`http://localhost:5000/todos/${id}`, {\n                method: \"DELETE\"\n            })\n            setTodos(todos.filter(todo => todo.todo_id !== id))\n        } catch (err) {\n            console.log(err.message);\n        }\n    }\n\n    useEffect(() => {\n        getTodos();\n    }, [])\n\n    return (\n        <Fragment>\n            <div className=\"container mx-auto px-4 sm:px-8\">\n                <div className=\"py-8\">\n                    <div>\n                        <h2 className=\"text-2xl font-semibold leading-tight\">Task List</h2>\n                    </div>\n                    <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                        <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\n                            <table className=\"min-w-full leading-normal\">\n                                <thead>\n                                    <tr>\n                                        <th\n                                            className=\"px-5 py-5 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                                            Description\n                                        </th>\n                                        <th\n                                            className=\"px-3 py-2 border-b-2 border-gray-200 bg-gray-100 text-right pr-10 text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                                            Edit\n                                        </th>\n                                        <th\n                                            className=\"px-3 py-2 border-b-2 border-gray-200 bg-gray-100 text-right pr-10 text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                                            Delete\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        todos.map(todo => (\n                                            <tr key={todo.todo_id}>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-left text-sm tracking-wider \">\n                                                    <div className=\"ml-3\">\n                                                        <p className=\"text-gray-900 whitespace-no-wrap text-left\">\n                                                            {todo.description}\n                                                        </p>\n                                                    </div>\n                                                </td>\n                                                <td className=\"px-3 py-2 border-b-2 border-gray-200 bg-white text-right text-sm tracking wider\">\n                                                    <EditTodo todo={todo} />\n                                                </td>\n                                                <td className=\"px-5 py-2 left-0 border-b border-gray-200 bg-white text-right text-sm\">\n                                                    <button className=\"px-2 py-2 text-xs font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-red-700 rounded-md sm:mx-2 hover:bg-red-600 focus:outline-none focus:bg-blue-600\"\n                                                        onClick={() => deleteTodo(todo.todo_id)}>\n                                                        Delete\n\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment >\n    )\n}\n\nexport default ListTodo;\n\n","/Users/rainierio/Project/perntodo/client/src/components/editTodo.js",["30","31"],"import React, { Fragment, useState, useCallback } from 'react';\n\nconst EditTodo = ({ todo }) => {\n    const [showModal, setShowModal] = useState(false);\n    const [description, setDescription] = useState(todo.description)\n\n    const updateDescription = async e => {\n        e.preventDefault();\n        try {\n            const body = { description };\n            const response = await fetch(`http://localhost:5000/todos/${todo.todo_id}`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            })\n\n            window.location = \"/\";\n        } catch (err) {\n            console.log(err.message);\n        }\n    }\n\n    const handleShowModal = useCallback(() => {\n        setShowModal(!showModal);\n        setDescription(todo.description)\n    }, [showModal]);\n\n    const handleCloseModal = useCallback(() => {\n        setShowModal(false);\n    }, []);\n\n    return (\n        <Fragment>\n            <div>\n                <button onClick={handleShowModal} id=\"buttonmodal\" className=\"px-5 py-2 text-xs font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-lime-700 rounded-md sm:mx-2 hover:bg-lime-600 focus:outline-none focus:bg-blue-600\" type=\"button\">Edit</button>\n            </div>\n            {showModal &&\n\n                <div id=\"modal\" className=\"fixed z-50 inset-0 bg-gray-900 bg-opacity-60 overflow-y-auto h-full w-full px-4\">\n                    <div className=\"relative top-40 mx-auto shadow-lg rounded-md bg-white max-w-md\">\n\n\n                        <div className=\"flex justify-between items-center bg-lime-700 text-white text-xl rounded-t-md px-4 py-2\">\n                            <h3>Edit Data</h3>\n                            <button onClick={handleCloseModal}>x</button>\n                        </div>\n\n\n                        <div className=\"max-h-48 p-4\">\n                            <div className=\"mb-4 relative\">\n                                <input className=\"input form-control border border-gray-400 appearance-none rounded w-full px-3 py-3 pt-5 pb-2 focus focus:border-indigo-600 focus:outline-none active:outline-none active:border-indigo-600\" id=\"task\" type=\"text\" autoFocus value={description} onChange={e => setDescription(e.target.value)} />\n                            </div>\n                        </div>\n\n\n                        <div className=\"px-4 py-2 border-t border-t-gray-500 flex justify-end items-center space-x-4\">\n                            <button className=\"bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-500 transition\" onClick={handleCloseModal}>Close</button>\n                            <button className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-500 transition\" onClick={e => updateDescription(e)}>Submit</button>\n                        </div>\n                    </div>\n                </div>\n\n            }\n        </Fragment>\n    )\n}\nexport default EditTodo;\n\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":12,"column":19,"nodeType":"38","messageId":"39","endLine":12,"endColumn":27},{"ruleId":"36","severity":1,"message":"37","line":21,"column":19,"nodeType":"38","messageId":"39","endLine":21,"endColumn":27},{"ruleId":"36","severity":1,"message":"37","line":11,"column":19,"nodeType":"38","messageId":"39","endLine":11,"endColumn":27},{"ruleId":"40","severity":1,"message":"41","line":26,"column":8,"nodeType":"42","endLine":26,"endColumn":19,"suggestions":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'todo.description'. Either include it or remove the dependency array. If 'setDescription' needs the current value of 'todo.description', you can also switch to useReducer instead of useState and read 'todo.description' in the reducer.","ArrayExpression",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [showModal, todo.description]",{"range":"49","text":"50"},[839,850],"[showModal, todo.description]"]